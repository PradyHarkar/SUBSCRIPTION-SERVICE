trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Install Terraform
- script: |
    sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
    curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    sudo apt-get update && sudo apt-get install terraform
  displayName: 'Install Terraform'

# Terraform Initialization
- script: |
    terraform init
  workingDirectory: infra
  displayName: 'Terraform Init'

# Terraform Apply
- script: |
    terraform apply -auto-approve
  workingDirectory: infra
  displayName: 'Terraform Apply'

# App Deployment
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'Build React App'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ReactApp.zip'
    replaceExistingArchive: true
  displayName: 'Archive Build Output'

- task: AzureWebApp@1
  inputs:
    azureSubscription: '<Your-Service-Connection>'
    appName: 'StartupAppService'
    package: '$(Build.ArtifactStagingDirectory)/ReactApp.zip'
  displayName: 'Deploy React App'